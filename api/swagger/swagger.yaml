swagger: "2.0"
info:
  version: "0.1.0"
  title: Deployment Tracker
host: localhost:8080
basePath: /
parameters:
  limit:
    name: limit
    in: query
    description: Number of results to return
    required: true
    type: integer
    default: 25
    minimum: 1
    maximum: 1000
  offset:
    name: offset
    in: query
    description: Which result to start with
    required: true
    type: integer
    default: 0
    minimum: 0
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/deployments:
    x-swagger-router-controller: deployments
    get:
      description: Get the list of most recently completed deployments
      operationId: getDeployments
      parameters:
        - $ref: "#/parameters/offset"
        - $ref: "#/parameters/limit"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Deployment"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/deployments/{id}:
    x-swagger-router-controller: deployments
    get:
      description: Get a deployment
      operationId: getDeployment
      parameters:
        - name: id
          in: path
          description: Unique Identifier (UUID) of the deployment to retrieve
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Deployment"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Record the start of a new deployment
      operationId: postDeployment
      produces:
        - text/plain
      parameters:
        - name: id
          in: path
          description: Unique Identifier (UUID) of the deployment that is starting
          required: true
          type: string
        - name: body
          in: body
          description: The Deployment object to be created
          required: true
          schema:
            $ref: "#/definitions/Deployment"
      responses:
        "201":
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Record the completion of a new deployment
      operationId: putDeployment
      produces:
        - text/plain
      parameters:
        - name: id
          in: path
          description: Unique Identifier (UUID) of the deployment that has completed
          required: true
          type: string
        - name: body
          in: body
          description: The Deployment object to be updated
          required: true
          schema:
            $ref: "#/definitions/Deployment"
      responses:
        "204":
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/deployments/{id}/logs:
    x-swagger-router-controller: logs
    post:
      description: Record a log message associated with a deployment
      operationId: postLogs
      produces:
        - text/plain
      parameters:
        - name: id
          in: path
          description: Unique Identifier (UUID) of the deployment that is starting
          required: true
          type: string
        - name: body
          in: body
          description: The log message to be recorded
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/LogMessage"
      responses:
        "201":
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/deployments/{id}/servers:
    x-swagger-router-controller: servers
    post:
      description: Record the start of a deployment to a server
      operationId: postServer
      produces:
        - text/plain
      parameters:
        - name: id
          in: path
          description: Unique Identifier (UUID) of the deployment that is starting
          required: true
          type: string
        - name: body
          in: body
          description: The server on which the deployment is starting
          required: true
          schema:
            $ref: "#/definitions/Server"
      responses:
        "201":
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Record the completion of a deployment to a server
      operationId: putServer
      produces:
        - text/plain
      parameters:
        - name: id
          in: path
          description: Unique Identifier (UUID) of the deployment that has completed
          required: true
          type: string
        - name: body
          in: body
          description: The server on which the deployment has completed
          required: true
          schema:
            $ref: "#/definitions/Server"
      responses:
        "204":
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/servers:
    x-swagger-router-controller: servers
    get:
      description: Return a list of all servers that have been deployed to
      operationId: getAllServers
      parameters:
        - $ref: "#/parameters/offset"
        - $ref: "#/parameters/limit"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              type: string
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /v1/servers/{hostname}:
    x-swagger-router-controller: servers
    get:
      description: Return a list of all servers that have been deployed to
      operationId: getServerByHostname
      parameters:
        - name: hostname
          in: path
          description: The hostname for the server
          required: true
          type: string
        - $ref: "#/parameters/offset"
        - $ref: "#/parameters/limit"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Server"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /config:
    x-swagger-router-controller: admin
    get:
      description: Return the current application configuration
      operationId: config
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ObjectResponse"
        default:
          description: Error
  /healthcheck:
    x-swagger-router-controller: admin
    get:
      description: Run a health check and return the test results
      operationId: healthcheck
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ObjectResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ObjectResponse"
definitions:
  ObjectResponse:
    properties:
      message:
        type: object
  ErrorResponse:
    required:
      - Error
    properties:
      Error:
        type: string
  Deployment:
    type: object
    required:
      - deployment_id
    properties:
      deployment_id:
        type: string
        description: Unique identifier of a deployment. UUID
      engine:
        type: string
        description: The execution engine of the deployment
      engine_version:
        type: string
        description: The version of the execution engine
      host:
        type: string
        description: The host from which the deployment is being executed
      user:
        type: string
        description: The user executing the deploymetn
      environment:
        type: string
        description: The target environment of the deployment
      package:
        type: string
        description: The name of the software application or service being deployed
      package_url:
        type: string
        description: A URL that points to more information about the package
      version:
        type: string
        description: The version of the package being deployed
      arguments:
        type: string
        description: Any arguments used for the deployment
      result:
        type: string
        description: The result of running the deployment
        enum:
          - success
          - failure
      elapsed_seconds:
        type: integer
        description: The elapsed time of the deployment, in seconds
      assert_empty_server_result:
        type: boolean
        description: Whether or not to assert the result of a deployment to any server that doesn't have a result at the time the deployment is marked complete
      servers:
        type: array
        description: The servers that participated in the deployment
        items:
          $ref: "#/definitions/Server"
  Server:
    required:
      - deployment_id
      - hostname
    properties:
      deployment_id:
        type: string
        description: Unique Identifier (UUID) of the deployment starting
      hostname:
        type: string
        description: Fully qualified domain name of the server
      ip_address:
        type: string
        description: IP Address of the server
      result:
        type: string
        description: The result of running the deployment on the server
        enum:
          - success
          - failure
      elapsed_seconds:
        type: integer
        description: The elapsed time of the deployment, in seconds
  LogMessage:
    required:
      - message
    properties:
      message:
        type: string
        description: The message to log
